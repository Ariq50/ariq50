# -*- coding: utf-8 -*-
"""week5-2_ex2_ksattar_cis502.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_rP-9fRQW38DkH2Gez5GaPEX8MEdoipJ
"""

#Define the debug class decorator
def debug(cls):
  class DebuggedClass(cls):
    def __getattribute__(self, name):
      attr = super().__getattribute__(name)
      if callable(attr):
        def wrapper(*args, **kwargs):
          result = attr(*args, **kwargs)
          return result
        return wrapper
      else:
        return attr
  return DebuggedClass

#Apply debug decorator to Calculator class
@debug
class Calculator:
  def add(self, a, b):
    return a + b

#Create instance of Calculator class
calc = Calculator()

#Call the add method
result = calc.add(3, 5)

#Print the result
print(f"Output: \n{result}")