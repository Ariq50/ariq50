# -*- coding: utf-8 -*-
"""week9_exercise_ksattar_cis502.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VYhMRuskFN0HzV_fnlUQzIrNx1q4Vr9i
"""

class ComplexNumber(object):
  def __init__(self, real, imag):
    self.real = real
    self.imag = imag

  def __add__(self, other):
    self.real = self.real + other.real
    self.imag = self.imag + other.imag
    return self

  def __sub__(self, other):
    self.real = self.real - other.real
    self.imag = self.imag - other.imag
    return self

  def __mul__(self, other):
    self.real = self.real * other.real
    self.imag = self.imag * other.imag
    return self

  def __str__(self):
    if self.imag == 0:
      result = "%.2f+0.00i" % (self.real)
    elif self.real == 0:
      if self.imag >= 0:
        result = "0.00+%.2fi" % (self.imag)
      else:
        result = "0.00-%.2fi" % (abs(self.imag))
    elif self.imag > 0:
      result = "%.2f+%.2fi" % (self.real, self.imag)
    else:
      result = "%.2f-%.2fi" % (self.real, abs(self.imag))
    return result

#Testing implementation
if __name__ == "__main__":
  #Create two complex numbers
  num1 = ComplexNumber(2, 3)
  num2 = ComplexNumber(1, 4)
  num3 = ComplexNumber(-1, 5)
  num4 = ComplexNumber(1, -7)
  num5 = ComplexNumber(-1, -5)
  num6 = ComplexNumber(-1, -7)

  #Perform addition
  sum_result = num1 + num2
  print("Addition Result:", sum_result)

  sum_result2 = num3 + num4
  print("(One Negative, One Positive) Addition Result:", sum_result2)

  sum_result3 = num5 + num6
  print("(Both Negative) Addition Result:", sum_result3)

  #Perform subtraction
  sub_result = num1 - num2
  print("Subtraction Result:", sub_result)

  sub_result2 = num3 - num4
  print("(One Negative, One Positive) Subtraction Result:", sub_result2)

  sub_result3 = num5 - num6
  print("(Both Negative) Subtraction Result:", sub_result3)

  #Perform multiplication
  mul_result = num1 * num2
  print("Multiplication Result:", mul_result)

  mul_result2 = num3 * num4
  print("(One Negative, One Postive) Multiplication Result:", mul_result2)

  mul_result3 = num5 * num6
  print("(Both Negative) Multiplication Result:", mul_result3)