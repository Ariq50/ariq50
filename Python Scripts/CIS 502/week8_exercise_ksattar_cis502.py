# -*- coding: utf-8 -*-
"""week8_exercise_ksattar_cis502.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Bc54zdnsLBnYI788jjatzg4lnWMtQicR
"""

class Singleton:
    """
    Singleton class that ensures only one instance is created.
    """

    _instance = None

    def __new__(cls):
        """
        Create a new instance if it doesn't exist, otherwise return the existing instance.
        """
        if cls._instance is None:
            cls._instance = super().__new__(cls)
            cls._instance.value = None
        return cls._instance

    def set_value(self, value):
        """
        Set a value for the singleton instance.
        """
        self.value = value

    def get_value(self):
        """
        Get the value stored in the singleton instance.
        """
        return self.value

def main():
  # Create two instances of Singleton
  singleton1 = Singleton()
  singleton2 = Singleton()

  # Set a value for the first instance
  singleton1.set_value("Hello, I am a Singleton!")

  # Get the value from the second instance
  print(singleton2.get_value())  # Output: Hello, I am a Singleton!

# Demonstrate the usage of the Singleton pattern
if __name__ == "__main__":
  main()